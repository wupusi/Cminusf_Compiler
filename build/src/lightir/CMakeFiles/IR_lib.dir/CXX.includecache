#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

../include/lightir/BasicBlock.hpp
Instruction.hpp
../include/lightir/Instruction.hpp
Value.hpp
../include/lightir/Value.hpp
list
-
llvm/ADT/ilist.h
-
llvm/ADT/ilist_node.h
-
set
-
string
-

../include/lightir/Constant.hpp
Type.hpp
../include/lightir/Type.hpp
User.hpp
../include/lightir/User.hpp
Value.hpp
../include/lightir/Value.hpp

../include/lightir/Function.hpp
BasicBlock.hpp
../include/lightir/BasicBlock.hpp
Type.hpp
../include/lightir/Type.hpp
User.hpp
../include/lightir/User.hpp
cassert
-
cstddef
-
iterator
-
list
-
llvm/ADT/ilist.h
-
llvm/ADT/ilist_node.h
-
map
-
memory
-

../include/lightir/GlobalVariable.hpp
Constant.hpp
../include/lightir/Constant.hpp
User.hpp
../include/lightir/User.hpp
llvm/ADT/ilist_node.h
-

../include/lightir/IRprinter.hpp
BasicBlock.hpp
../include/lightir/BasicBlock.hpp
Constant.hpp
../include/lightir/Constant.hpp
Function.hpp
../include/lightir/Function.hpp
GlobalVariable.hpp
../include/lightir/GlobalVariable.hpp
Instruction.hpp
../include/lightir/Instruction.hpp
Module.hpp
../include/lightir/Module.hpp
Type.hpp
../include/lightir/Type.hpp
User.hpp
../include/lightir/User.hpp
Value.hpp
../include/lightir/Value.hpp

../include/lightir/Instruction.hpp
Type.hpp
../include/lightir/Type.hpp
User.hpp
../include/lightir/User.hpp
cstdint
-
llvm/ADT/ilist_node.h
-

../include/lightir/Module.hpp
Function.hpp
../include/lightir/Function.hpp
GlobalVariable.hpp
../include/lightir/GlobalVariable.hpp
Instruction.hpp
../include/lightir/Instruction.hpp
Type.hpp
../include/lightir/Type.hpp
Value.hpp
../include/lightir/Value.hpp
list
-
llvm/ADT/ilist.h
-
llvm/ADT/ilist_node.h
-
map
-
memory
-
string
-

../include/lightir/Type.hpp
iostream
-
vector
-

../include/lightir/User.hpp
Value.hpp
../include/lightir/Value.hpp
vector
-

../include/lightir/Value.hpp
functional
-
iostream
-
list
-
string
-

/home/whoops/compiler/lab2/src/lightir/BasicBlock.cpp
BasicBlock.hpp
/home/whoops/compiler/lab2/src/lightir/BasicBlock.hpp
Function.hpp
/home/whoops/compiler/lab2/src/lightir/Function.hpp
IRprinter.hpp
/home/whoops/compiler/lab2/src/lightir/IRprinter.hpp
Module.hpp
/home/whoops/compiler/lab2/src/lightir/Module.hpp
cassert
-

/home/whoops/compiler/lab2/src/lightir/Constant.cpp
Constant.hpp
/home/whoops/compiler/lab2/src/lightir/Constant.hpp
Module.hpp
/home/whoops/compiler/lab2/src/lightir/Module.hpp
iostream
-
memory
-
sstream
-
unordered_map
-

/home/whoops/compiler/lab2/src/lightir/Function.cpp
Function.hpp
/home/whoops/compiler/lab2/src/lightir/Function.hpp
IRprinter.hpp
/home/whoops/compiler/lab2/src/lightir/IRprinter.hpp
Module.hpp
/home/whoops/compiler/lab2/src/lightir/Module.hpp

/home/whoops/compiler/lab2/src/lightir/GlobalVariable.cpp
GlobalVariable.hpp
/home/whoops/compiler/lab2/src/lightir/GlobalVariable.hpp
IRprinter.hpp
/home/whoops/compiler/lab2/src/lightir/IRprinter.hpp

/home/whoops/compiler/lab2/src/lightir/IRprinter.cpp
IRprinter.hpp
/home/whoops/compiler/lab2/src/lightir/IRprinter.hpp
Instruction.hpp
/home/whoops/compiler/lab2/src/lightir/Instruction.hpp
cassert
-
type_traits
-

/home/whoops/compiler/lab2/src/lightir/Instruction.cpp
Instruction.hpp
/home/whoops/compiler/lab2/src/lightir/Instruction.hpp
BasicBlock.hpp
/home/whoops/compiler/lab2/src/lightir/BasicBlock.hpp
Function.hpp
/home/whoops/compiler/lab2/src/lightir/Function.hpp
IRprinter.hpp
/home/whoops/compiler/lab2/src/lightir/IRprinter.hpp
Module.hpp
/home/whoops/compiler/lab2/src/lightir/Module.hpp
Type.hpp
/home/whoops/compiler/lab2/src/lightir/Type.hpp
algorithm
-
cassert
-
stdexcept
-
string
-
vector
-

/home/whoops/compiler/lab2/src/lightir/Module.cpp
Module.hpp
/home/whoops/compiler/lab2/src/lightir/Module.hpp
Function.hpp
/home/whoops/compiler/lab2/src/lightir/Function.hpp
GlobalVariable.hpp
/home/whoops/compiler/lab2/src/lightir/GlobalVariable.hpp
memory
-
string
-

/home/whoops/compiler/lab2/src/lightir/Type.cpp
Type.hpp
/home/whoops/compiler/lab2/src/lightir/Type.hpp
Module.hpp
/home/whoops/compiler/lab2/src/lightir/Module.hpp
array
-
cassert
-
stdexcept
-

/home/whoops/compiler/lab2/src/lightir/User.cpp
User.hpp
/home/whoops/compiler/lab2/src/lightir/User.hpp
cassert
-

/home/whoops/compiler/lab2/src/lightir/Value.cpp
Value.hpp
/home/whoops/compiler/lab2/src/lightir/Value.hpp
Type.hpp
/home/whoops/compiler/lab2/src/lightir/Type.hpp
User.hpp
/home/whoops/compiler/lab2/src/lightir/User.hpp
cassert
-

/usr/lib/llvm-10/include/llvm-c/DataTypes.h
cmath
-
math.h
-
inttypes.h
-
stdint.h
-
sys/types.h
-
cstddef
-
cstdlib
-
stddef.h
-
stdlib.h
-
sys/types.h
-

/usr/lib/llvm-10/include/llvm/ADT/PointerIntPair.h
llvm/Support/Compiler.h
/usr/lib/llvm-10/include/llvm/ADT/llvm/Support/Compiler.h
llvm/Support/PointerLikeTypeTraits.h
/usr/lib/llvm-10/include/llvm/ADT/llvm/Support/PointerLikeTypeTraits.h
llvm/Support/type_traits.h
/usr/lib/llvm-10/include/llvm/ADT/llvm/Support/type_traits.h
cassert
-
cstdint
-
limits
-

/usr/lib/llvm-10/include/llvm/ADT/ilist.h
llvm/ADT/simple_ilist.h
/usr/lib/llvm-10/include/llvm/ADT/llvm/ADT/simple_ilist.h
cassert
-
cstddef
-
iterator
-

/usr/lib/llvm-10/include/llvm/ADT/ilist_base.h
llvm/ADT/ilist_node_base.h
/usr/lib/llvm-10/include/llvm/ADT/llvm/ADT/ilist_node_base.h
cassert
-

/usr/lib/llvm-10/include/llvm/ADT/ilist_iterator.h
llvm/ADT/ilist_node.h
/usr/lib/llvm-10/include/llvm/ADT/llvm/ADT/ilist_node.h
cassert
-
cstddef
-
iterator
-
type_traits
-

/usr/lib/llvm-10/include/llvm/ADT/ilist_node.h
llvm/ADT/ilist_node_base.h
/usr/lib/llvm-10/include/llvm/ADT/llvm/ADT/ilist_node_base.h
llvm/ADT/ilist_node_options.h
/usr/lib/llvm-10/include/llvm/ADT/llvm/ADT/ilist_node_options.h

/usr/lib/llvm-10/include/llvm/ADT/ilist_node_base.h
llvm/ADT/PointerIntPair.h
/usr/lib/llvm-10/include/llvm/ADT/llvm/ADT/PointerIntPair.h

/usr/lib/llvm-10/include/llvm/ADT/ilist_node_options.h
llvm/Config/abi-breaking.h
/usr/lib/llvm-10/include/llvm/ADT/llvm/Config/abi-breaking.h
type_traits
-

/usr/lib/llvm-10/include/llvm/ADT/simple_ilist.h
llvm/ADT/ilist_base.h
/usr/lib/llvm-10/include/llvm/ADT/llvm/ADT/ilist_base.h
llvm/ADT/ilist_iterator.h
/usr/lib/llvm-10/include/llvm/ADT/llvm/ADT/ilist_iterator.h
llvm/ADT/ilist_node.h
/usr/lib/llvm-10/include/llvm/ADT/llvm/ADT/ilist_node.h
llvm/ADT/ilist_node_options.h
/usr/lib/llvm-10/include/llvm/ADT/llvm/ADT/ilist_node_options.h
llvm/Support/Compiler.h
/usr/lib/llvm-10/include/llvm/ADT/llvm/Support/Compiler.h
algorithm
-
cassert
-
cstddef
-
functional
-
iterator
-
utility
-

/usr/lib/llvm-10/include/llvm/Config/abi-breaking.h

/usr/lib/llvm-10/include/llvm/Config/llvm-config.h

/usr/lib/llvm-10/include/llvm/Support/Compiler.h
llvm/Config/llvm-config.h
/usr/lib/llvm-10/include/llvm/Support/llvm/Config/llvm-config.h
new
-
stddef.h
-
sal.h
-
sanitizer/msan_interface.h
-
sanitizer/asan_interface.h
-

/usr/lib/llvm-10/include/llvm/Support/DataTypes.h
llvm-c/DataTypes.h
/usr/lib/llvm-10/include/llvm/Support/llvm-c/DataTypes.h

/usr/lib/llvm-10/include/llvm/Support/PointerLikeTypeTraits.h
llvm/Support/DataTypes.h
/usr/lib/llvm-10/include/llvm/Support/llvm/Support/DataTypes.h
assert.h
-
type_traits
-

/usr/lib/llvm-10/include/llvm/Support/type_traits.h
llvm/Support/Compiler.h
/usr/lib/llvm-10/include/llvm/Support/llvm/Support/Compiler.h
type_traits
-
utility
-

